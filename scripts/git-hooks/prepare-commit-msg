#!/usr/bin/env node

// Prepends commit message with Jira Issue if in branch name and if not already prepended in commit message.

const fs = require("fs");
const path = require("path");

function getCurrentBranch() {
  const headFilePath = path.join(path.resolve(), ".git/HEAD");
  let currentBranch = fs.readFileSync(headFilePath).toString().trim();
  return currentBranch;
}

function getJiraIssue() {
  const branchName = getCurrentBranch();
  const branchRegex = /\/([a-zA-Z]{2,4}-[0-9]+){1}/gi;
  const commitPrefixArr = branchName.match(branchRegex) || "";
  const jiraIssue =
    commitPrefixArr.length > 0 ? commitPrefixArr[0].slice(1).toUpperCase() : "";
  return jiraIssue;
}

function prependCommitMessageWithJiraIssue() {
  const commitMessageFile = process.argv[2];
  let commitMessage = fs.readFileSync(commitMessageFile, "utf8").trim();
  const jiraIssue = getJiraIssue();
  if (!!jiraIssue && !commitMessage.startsWith(jiraIssue)) {
    commitMessage = `${!!jiraIssue ? `${jiraIssue} - ` : ""}${commitMessage}\n`;
    fs.writeFileSync(commitMessageFile, commitMessage);
  }
  process.exit(0);
}

try {
  prependCommitMessageWithJiraIssue();
} catch (error) {
  console.log(`Error updating commit message: ${error}`);
}
